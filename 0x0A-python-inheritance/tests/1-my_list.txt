The ``1-my_list`` module
========================

Using ``MyList`` class
----------------------

First import ``MyList`` from the ``1-my_list`` module:

	>>> MyList = __import__('1-my_list').MyList

Now use it:

1. With a integers list
	>>> my_list = MyList([1, 4, 2, 3, 5])
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]
	>>> print(my_list)
	[1, 4, 2, 3, 5]

2. With a floats list
	>>> my_list = MyList([1.34, 4.5, 2.12, 3.6])
	>>> print(my_list)
	[1.34, 4.5, 2.12, 3.6]
	>>> my_list.print_sorted()
	[1.34, 2.12, 3.6, 4.5]
	>>> print(my_list)
	[1.34, 4.5, 2.12, 3.6]

3. With a negative integers list
	>>> my_list = MyList([1, 4, -2, 3, -5])
	>>> my_list.print_sorted()
	[-5, -2, 1, 3, 4]

4. With a characters list
	>>> my_list = MyList(['b', 'f', 'a', 'd', 't'])
	>>> my_list.print_sorted()
	['a', 'b', 'd', 'f', 't']

5. With a strings list
	>>> my_list = MyList(["Hello", "Abc", "Aaa"])
	>>> my_list.print_sorted()
	['Aaa', 'Abc', 'Hello']

6. With a empty list
	>>> my_list = MyList([])
	>>> my_list.print_sorted()
	[]

7. Without list
	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

8. The list items must be the same type
	>>> my_list = MyList([3, "hello", 'b', 4.6])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'str' and 'int'
	
9. You can use the method print_sorted with the instances of MyList
	>>> my_list = [1, 4, 5, 2]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	AttributeError: 'list' object has no attribute 'print_sorted'
