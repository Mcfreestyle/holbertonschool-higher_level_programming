The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

1. With a matrix of integers and integer divider
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
	
2. With a matrix of integers and floats and float divider 
	>>> matrix_divided([[1, 2.67, 3], [4.123, 5, 6.8]], 3.5)
	[[0.29, 0.76, 0.86], [1.18, 1.43, 1.94]]

3. The matrix must be a list
	>>> matrix_divided("hello", 6)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

4. The matrix must be a list of lists
	>>> matrix_divided([1, [2, 3, 4], "world"], 1.4)
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

5. Each row of the matrix must be of the same size
	>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7], [8, 9]], 2)
	Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size

6. The divider must be a integer or float
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
	Traceback (most recent call last):
	TypeError: div must be a number

7. The divider can't be equal to 0
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

8. The function requires two arguments
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

9. The matrix can't be a empty list
	>>> matrix_divided([], 2)
	[]
