The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

First import ``add_integer`` from the ``0-add_integer`` module:
	
	>>> add_integer = __import__('0-add_integer').add_integer

Now use it:

1. Sum of 2 positive integers
	>>> add_integer(4, 6)
	10

2. Sum of a positive integer and a negative one
	>>> add_integer(3, -6)
	-3

3. Sum of 2 negative integers
	>>> add_integer(-12, -5)
	-17

4. Sum with a only argument
	>>> add_integer(2)
	100

5. Sum of 2 float numbers
	>>> add_integer(3.45, 78.789)
	81

6. Sum of a integer with a float
	>>> add_integer(-4, 6.77)
	2

7. The first argument must be an integer  
	>>> add_integer("hello", 5)
	Traceback (most recent call last):
	TypeError: a must be an integer

8. The second argument must be an integer  
	>>> add_integer(6, [3, 5])
	Traceback (most recent call last):
	TypeError: b must be an integer

9. A argument is too large
	>>> add_integer(8.7, 1e400)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

10. The first argument must be written
	>>> add_integer(, 12) # doctest: +IGNORE_EXCEPTION_DETAIL
	Traceback (most recent call last):
	SyntaxError: invalid syntax

12. The function only allow 2 arguments
	>>> add_integer(23, -5, 67.6, 100) # doctest: +ELLIPSIS
	Traceback (most recent call last):
	TypeError: add_integer() takes from 1 to 2 positional arguments but ... were given

12. The function requires at least one argument
	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

13. The address of the function
	>>> add_integer #doctest: +ELLIPSIS
	<function add_integer at 0x...>

